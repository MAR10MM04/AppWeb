// <auto-generated />
using System;
using AppWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppWeb.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AppWeb.Models.Animal", b =>
                {
                    b.Property<int>("Id_Animal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Animal"));

                    b.Property<int>("Arete")
                        .HasColumnType("int");

                    b.Property<string>("Clasificacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Id_Lote")
                        .HasColumnType("int");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.Property<string>("Raza")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_Animal");

                    b.HasIndex("Id_Lote");

                    b.ToTable("Animales");
                });

            modelBuilder.Entity("AppWeb.Models.Lote", b =>
                {
                    b.Property<int>("Id_Lote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Lote"));

                    b.Property<string>("Comunidad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Fecha_Entrada")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Fecha_Salida")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id_User")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Remo")
                        .HasColumnType("int");

                    b.Property<string>("upp")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_Lote");

                    b.HasIndex("Id_User");

                    b.ToTable("Lote");
                });

            modelBuilder.Entity("AppWeb.Models.User", b =>
                {
                    b.Property<int>("Id_User")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_User"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("upp")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_User");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AppWeb.Models.Animal", b =>
                {
                    b.HasOne("AppWeb.Models.Lote", "Lote")
                        .WithMany("Animales")
                        .HasForeignKey("Id_Lote")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lote");
                });

            modelBuilder.Entity("AppWeb.Models.Lote", b =>
                {
                    b.HasOne("AppWeb.Models.User", "User")
                        .WithMany("Lote")
                        .HasForeignKey("Id_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AppWeb.Models.Lote", b =>
                {
                    b.Navigation("Animales");
                });

            modelBuilder.Entity("AppWeb.Models.User", b =>
                {
                    b.Navigation("Lote");
                });
#pragma warning restore 612, 618
        }
    }
}
